# =============================================================================
# 2lY CONFIGURATION
#
# You can customize your 2ly instance using the following ENV variables. 
# They all have decent default values so you should not need to modify 
# anything to get started.
#
# If you want to benefit from AI features within 2ly you will need to
# bring your own token (BYOT)
# =============================================================================

# =============================================================================
# BYOT CONFIGURATION

# Azure OpenAI endpoint (default: https://models.inference.ai.azure.com)
# Azure OpenAI service endpoint for MCP auto-configuration
# AZURE_ENDPOINT=https://models.inference.ai.azure.com

# Azure OpenAI API key (default: empty)
# API key for Azure OpenAI service authentication
# AZURE_API_KEY=

# Brave Search API key (default: empty)
# API key for Brave Search service used in MCP auto-configuration
# BRAVE_SEARCH_API_KEY=
# =============================================================================

# =============================================================================
# INFRASTRUCTURE CONFIGURATION
# =============================================================================

# NATS servers connection string (default: localhost:4222)
# Comma-separated list of NATS server addresses for clustering
# NATS_SERVERS=localhost:4222

# DGraph database URL (default: localhost:8080)
# HTTP endpoint for DGraph database connection
# DGRAPH_URL=localhost:8080

# Heartbeat check interval in milliseconds (default: 10000)
# How often to check runtime instance heartbeats
# CHECK_HEARTBEAT_INTERVAL=10000

# Drop all data on startup (default: false)
# WARNING: Setting to 'true' will clear all database data
# DROP_ALL_DATA=false

# Exposed NATS servers connection string (default: localhost:4222)
# Sent to the frontend for propert NATS server instruction when configuring runtimes
# EXPOSED_NATS_SERVERS=localhost:4222


# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Encryption key for password hashing (default: default-encryption-key)
# WARNING: Use a strong, unique key in production for password security
# ENCRYPTION_KEY=your-secure-encryption-key-here-with-min-32-chars

# =============================================================================
# JWT CONFIGURATION
# =============================================================================

# Path to the private key file for signing JWT tokens (PEM format)
# Example (development): JWT_PRIVATE_KEY_PATH=./packages/backend/keys/private-dev.pem
# Example (production):  JWT_PRIVATE_KEY_PATH=/etc/2ly/keys/private.pem
# JWT_PRIVATE_KEY_PATH=

# Path to the public key file for verifying JWT tokens (PEM format)
# Example (development): JWT_PUBLIC_KEY_PATH=./packages/backend/keys/public-dev.pem
# Example (production):  JWT_PUBLIC_KEY_PATH=/etc/2ly/keys/public.pem
# JWT_PUBLIC_KEY_PATH=

# JWT issuer (default: 2ly-platform)
# Used as the 'iss' claim in generated JWT tokens
# JWT_ISSUER=2ly-platform

# JWT access token time-to-live in seconds (default: 900, i.e., 15 minutes)
# Determines how long access tokens are valid
# JWT_ACCESS_TOKEN_TTL=900

# JWT refresh token time-to-live in seconds (default: 604800, i.e., 7 days)
# Determines how long refresh tokens are valid
# JWT_REFRESH_TOKEN_TTL=604800

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Main application log level (default: info)
# Controls the overall logging verbosity for the 2ly backend application
# LOG_LEVEL=info

# DGraph database log level (default: info)
# Controls logging verbosity for database operations and queries
# DGRAPH_LOG_LEVEL=info

# NATS messaging log level (default: info)
# Controls logging verbosity for NATS bus communication and events
# NATS_LOG_LEVEL=info

# Fastify web server log level (default: info)
# Controls logging verbosity for HTTP requests, responses, and server events
# FASTIFY_LOG_LEVEL=info

# Apollo GraphQL log level (default: info)
# Controls logging verbosity for GraphQL operations, queries, and mutations
# APOLLO_LOG_LEVEL=info

# Runtime service log level (default: info)
# Controls logging verbosity for runtime management and orchestration
# RUNTIME_LOG_LEVEL=info

# MCP Auto Config service log level (default: info)
# Controls logging verbosity for MCP server auto-configuration processes
# MCP_AUTO_CONFIG_LOG_LEVEL=info

# Runtime instance log level (default: info)
# Controls logging verbosity for individual runtime instances
# RUNTIME_INSTANCE_LOG_LEVEL=info