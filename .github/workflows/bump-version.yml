name: Bump Version

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-version:
    name: Create Version Bump PR
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to create branches and commits
      pull-requests: write # Required to create PRs

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get current version
        id: current-version
        run: |
          CURRENT_VERSION=$(node -p "require('./packages/backend/package.json').version")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Bump version
        id: bump
        run: |
          echo "Running bump-version script with type: ${{ github.event.inputs.bump_type }}"
          npm run bump-version:${{ github.event.inputs.bump_type }}

          NEW_VERSION=$(node -p "require('./packages/backend/package.json').version")
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Create release branch
        id: branch
        run: |
          BRANCH_NAME="release/v${{ steps.bump.outputs.version }}"
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT

          git checkout -b "$BRANCH_NAME"
          echo "Created branch: $BRANCH_NAME"

      - name: Commit version changes
        run: |
          git add packages/*/package.json
          git commit -m "chore: bump version to ${{ steps.bump.outputs.version }}"
          echo "Committed version bump"

      - name: Push branch
        run: |
          git push origin "${{ steps.branch.outputs.branch }}"
          echo "Pushed branch to origin"

      - name: Generate release notes
        id: release-notes
        run: |
          VERSION="${{ steps.bump.outputs.version }}"
          PREV_VERSION="${{ steps.current-version.outputs.version }}"

          # Get commits since last version tag
          PREV_TAG="v$PREV_VERSION"
          if git rev-parse "$PREV_TAG" >/dev/null 2>&1; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" "$PREV_TAG"..HEAD)
          else
            COMMITS=$(git log --pretty=format:"- %s (%h)" --max-count=20)
          fi

          # Create release notes
          NOTES="## Release v$VERSION

This PR bumps the version from v$PREV_VERSION to v$VERSION.

### Changes
$COMMITS

### Packages Updated
- @2ly/backend
- @2ly/frontend
- @2ly/runtime
- @2ly/common
- @2ly/doc

---

When this PR is merged to main, the following will happen automatically:
1. A git tag \`v$VERSION\` will be created
2. Docker images will be built and pushed with the \`v$VERSION\` tag
3. The NPM package \`@2ly/runtime@$VERSION\` will be published
4. A GitHub release will be created with release notes"

          # Save to file for PR body
          echo "$NOTES" > /tmp/release-notes.md
          echo "Generated release notes"

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ steps.bump.outputs.version }}"

          gh pr create \
            --title "chore: release v$VERSION" \
            --body-file /tmp/release-notes.md \
            --base main \
            --head "${{ steps.branch.outputs.branch }}" \
            --label "release"

          echo "✅ Created PR for version bump to v$VERSION"

      - name: Summary
        run: |
          VERSION="${{ steps.bump.outputs.version }}"
          PREV_VERSION="${{ steps.current-version.outputs.version }}"

          echo ""
          echo "✅ Version Bump PR Created Successfully!"
          echo ""
          echo "  Previous version: v$PREV_VERSION"
          echo "  New version:      v$VERSION"
          echo "  Bump type:        ${{ github.event.inputs.bump_type }}"
          echo ""
          echo "A pull request has been created and is ready for review."
          echo "Once merged, the release will be automatically tagged and published."
