name: Build and Push Docker Images

on:
  push:
    branches: [main, develop]
    paths:
      - 'packages/backend/**'
      - 'packages/runtime/**'
      - 'packages/common/**'
      - 'packages/frontend/**'
      - 'packages/doc/**'
      - 'packages/backend/Dockerfile'
      - 'packages/runtime/Dockerfile'
      - 'packages/frontend/Dockerfile'
      - 'packages/doc/Dockerfile'
      - '.github/workflows/*.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ${{ github.repository }}/backend
  IMAGE_NAME_RUNTIME: ${{ github.repository }}/runtime
  IMAGE_NAME_FRONTEND: ${{ github.repository }}/frontend
  IMAGE_NAME_DOC: ${{ github.repository }}/doc
  PR_NUMBER: ${{ github.event.number }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Set up Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '22'
      #     cache: 'npm'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Extract metadata for Runtime
        id: meta-runtime
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_RUNTIME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Extract metadata for Frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Extract metadata for Doc
        id: meta-doc
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_DOC }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/backend/Dockerfile
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Build and push Runtime image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/runtime/Dockerfile
          push: true
          tags: ${{ steps.meta-runtime.outputs.tags }}
          labels: ${{ steps.meta-runtime.outputs.labels }}
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/frontend/Dockerfile
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Build and push Doc image
        uses: docker/build-push-action@v5
        with:
          context: ./packages/doc
          file: ./packages/doc/Dockerfile
          push: true
          tags: ${{ steps.meta-doc.outputs.tags }}
          labels: ${{ steps.meta-doc.outputs.labels }}
          build-args: |
            BUILDKIT_INLINE_CACHE=1
